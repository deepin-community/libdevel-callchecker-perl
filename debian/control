Source: libdevel-callchecker-perl
Section: perl
Priority: optional
Build-Depends:
 debhelper,
 libb-hooks-op-check-perl <!nocheck>,
 libdynaloader-functions-perl <!nocheck>,
 libmodule-build-perl,
 perl,
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Uploaders:
 Jonas Smedegaard <dr@jones.dk>,
Standards-Version: 4.3.0
Vcs-Git: https://salsa.debian.org/perl-team/modules/packages/libdevel-callchecker-perl.git
Vcs-Browser: https://salsa.debian.org/perl-team/modules/packages/libdevel-callchecker-perl
Homepage: https://metacpan.org/release/Devel-CallChecker
Testsuite: autopkgtest-pkg-perl
Rules-Requires-Root: no

Package: libdevel-callchecker-perl
Architecture: any
Depends:
 libb-hooks-op-check-perl,
 libdynaloader-functions-perl,
 ${misc:Depends},
 ${perl:Depends},
 ${shlibs:Depends},
Description: custom op checking attached to subroutines
 Devel::CallChecker makes some new features of the Perl 5.14.0 C API
 available to XS modules running on older versions of Perl.
 The features are centred around the function cv_set_call_checker,
 which allows XS code to attach a magical annotation
 to a Perl subroutine,
 resulting in resolvable calls to that subroutine
 being mutated at compile time by arbitrary C code.
 This module makes cv_set_call_checker
 and several supporting functions available.
 (It is possible to achieve the effect of cv_set_call_checker
 from XS code on much earlier Perl versions,
 but it is painful to achieve without the centralised facility.)
